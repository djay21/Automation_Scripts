#changing value in directories and subdirectories
find ./ -type f -exec sed -i -e 's/10.135.10.129/nstel/g' {} \;

#setting proxy to npm mirrors to download packages over proxy 
npm config set proxy http://proxy_host:port
npm config set https-proxy https://proxy.company.com:8080



#git proxy 
git config --global --add http.proxy http://no.psld.cosdkp.sd:8080/
git config --global --add https.proxy http://no.cskd.drp.dsj:8080/

#exporting proxy
export http_proxy=http://proxy.com:8080/
export https_proxy=http://proxy.com:8080/

#curl command for token passing to next request 
json=$(curl -X POST   https://example.com/token   -H 'cache-control: no-cache'   -H 'content-type: application/x-www-form-urlencoded' -d 'username=developer&grant_type=password') && token=$( jq -r ".access_token" <<<"$json" ) && curl -X GET   https://example.com/users   -H "authorization: Bearer $token"   -H 'cache-control: no-cache'   -H 'content-type: application/json'


#mongo restore and dump command
mongodump --host 127.0.0.1 -d development --port 27017 --username user --password pass --authenticationDatabase admin --out /opt/backup/mongodump-2013-10-07-1

mongorestore --host hostname -p 27017 -u adminuser -p pass --authenticationDatabase admin -d development /Data/TargetDatabaseRestore

#Running bash file directly from the github
wget -O - https://raw.githubusercontent.com/djay21/ngrok-client-config/master/ngrok_setup.sh | sudo bash 



# clean up the buffer space in RAM
free -h && sync && echo 3 > /proc/sys/vm/drop_caches && free -h


#To free pagecache:
echo 1 > /proc/sys/vm/drop_caches

#To free dentries and inodes:
echo 2 > /proc/sys/vm/drop_caches

#To free pagecache, dentries and inodes:
echo 3 > /proc/sys/vm/drop_caches




#creating repo for elastic snapshots

curl --location --request PUT 'https://backup-els-smartify.apps.ocp4.innershift.sodigital.io/_snapshot/my_backup' \
--header 'Authorization: Basic ZWxhc3RpYzpTU0BlbGFzdGlj' \
--header 'Content-Type: application/json' \
--header 'Cookie: 26c3f8e61daef0389d126d918b028688=300a8adb7a2b74c992483fe55eb1761a' \
--data-raw '{
"type":"fs",
"settings" : {
"compress" : true,
"location" : "/app/es-backup"
}
}'



#creating snapshots

curl -k --location --request PUT "http://elasticsearch:9200/_snapshot/smartsearch_backup/${backupname}?wait_for_completion=true" \
--header 'Authorization: Basic ZWxhc3RpYzpTU0BlbGFzdGlj' \
--header 'Content-Type: application/json' \
--data-raw '{
"ignore_unavailable": true,
"include_global_state": false,
"metadata": {
"taken_by": "Elastic pod ",
"taken_because": "Schuduled backup"
}
}'


#to list snapshots
curl --location --request GET 'https://backup-els-smartify.apps.ocp4.innershift.sodigital.io/_snapshot/_all' \
--header 'Authorization: Basic ZWxhc3RpYzpTU0BlbGFzdGlj'


#to restore elastic search data from snapshots
curl --location --request POST 'https://backup-els-smartify.apps.ocp4.innershift.sodigital.io/_snapshot/my_backup/test_snap/_restore' \
--header 'Authorization: Basic ZWxhc3RpYzpTU0BlbGFzdGlj'


#to delete snaoshot
curl -k -X DELETE 'http://elasticsearch:9200/_snapshot/smartsearch_backup' --header 'Authorization: Basic ZWxhc3RpYzpTU0BlbGFzdGlj




#create folder date wise batch script 
for /f "skip=1" %%i in ('wmic os get localdatetime') do if not defined fulldate set fulldate=%%i
set year=%fulldate:~0,4%
set month=%fulldate:~4,2%
set day=%fulldate:~6,2%
set foldername=%year%.%month%.%day%
mkdir %foldername%
cd  %foldername%
