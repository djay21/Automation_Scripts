alias rc='nano ~/.bashrc'
alias sc='source ~/.bashrc'
alias cls='clear'
alias ls='ls -lrt'
alias pp='docker ps -a || sudo docker ps -a'
alias im='docker images -a || sudo docker images -a'
alias up='docker-compose up -d || sudo docker-compose up -d'
alias logs="docker logs -f ${1} || sudo docker logs -f ${1}"
alias imd="docker rmi -f $(docker images -aq)"
alias psd="docker rm -f $(docker ps -aq)"
alias prune="docker system prune || sudo docker system prune"
alias down='docker-compose down || sudo docker-compose down'
alias build='docker-compose up --build -d || sudo docker-compose up --build -d'
HISTTIMEFORMAT="%F %T: "
alias mango='docker run -p 8990:27017 -d mongo || sudo docker run -p 8990:27017 -d mongo'


#console into docker containers
function exe() { docker exec -it "$1" /bin/bash || sudo docker exec -it "$1" /bin/bash ;}

function installdocker() { wget -O - https://raw.githubusercontent.com/djay21/Automation_Scripts/master/docker_installation.sh | sudo bash ; }
function installmongo() { wget -O - https://raw.githubusercontent.com/djay21/Automation_Scripts/master/mongo_installation.sh | bash; }


#image building 
function builder() { docker build -t "$1" .  || sudo docker build -t "$1" .; }

#setting proxy
function proxy() { wget -O proxy.sh https://raw.githubusercontent.com/djay21/Automation_Scripts/master/proxy_setup.sh && bash proxy.sh && rm -rf proxy.sh ; }



#portainer installation
function portainer() { apt install figlet -y && figlet Portainer Installation && apt install apache2-utils -y && read -p "\n\nEnter your password: " pass && echo -e "\nPortainer Password is ${pass}" && password=$(htpasswd -nb -B admin ${pass} | cut -d ":" -f 2) && echo "Encrypted password is : $password" && docker run -d -p 6060:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer --admin-password ${password} || sudo docker run -d -p 8004:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer --admin-password ${password} && echo -e "\n \n Portainer is running on port 6060. "; }

function grafana() { rm -rf Grafan-Monitoring && apt install figlet -y && figlet Grafana Installation && git clone https://github.com/djay21/Grafana-Monitoring.git && cd Grafana-Monitoring && docker-compose up -d || sudo docker-compose up -d && echo -e "\n \n Grafana is running on port 6003................ " ; }
